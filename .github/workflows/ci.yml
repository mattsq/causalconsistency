name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        hardware: [cpu, cuda]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black ruff pytest
      - name: Run formatters
        run: |
          black .
          ruff check --fix .
      - name: Commit formatting changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git commit -am "chore: apply style fixes"
            git push
          fi
      - name: Run tests
        run: pytest -s

  publish-testpypi:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Build package
        run: |
          python -m pip install --upgrade pip
          pip install build
          python -m build
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.8.8
        with:
          repository-url: https://test.pypi.org/legacy/
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}

  publish-pypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Build package
        run: |
          python -m pip install --upgrade pip
          pip install build
          python -m build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.8
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
